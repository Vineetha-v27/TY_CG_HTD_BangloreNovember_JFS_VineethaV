package com.capgemini.retailerspringboot.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.capgemini.retailerspringboot.dto.UserInfo;

@Repository
public class UserDAOImpl implements UserDAO{

	@PersistenceUnit
	EntityManagerFactory factory;
	
	@Override
	public boolean addUser(UserInfo user) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		try {
			transaction.begin();
			manager.persist(user);
			transaction.commit();
			return true;
		} catch (Exception e) {
			return false;
		}
	}

	@Override
	public UserInfo getUser(int id) {
		EntityManager manager = factory.createEntityManager();
		UserInfo user = manager.find(UserInfo.class, id);
		return user;
	}

	@Override
	public List<UserInfo> getAllUsers() {
		EntityManager manager = factory.createEntityManager();
		String getall = "from UserInfo";
		TypedQuery<UserInfo> query = manager.createQuery(getall, UserInfo.class);
		return query.getResultList();
	}

	@Override
	public boolean deleteUser(int id) {
		return false;
	}

}
@Override
public Product getProduct(int id) {
	EntityManager manager = factory.createEntityManager();
	Product product = manager.find(Product.class, id);
	return product;
}

@Override
public List<Product> getAllProducts() {
	EntityManager manager = factory.createEntityManager();
	String getall = "from Product";
	TypedQuery<Product> query = manager.createQuery(getall, Product.class);
	return query.getResultList();
}

@Override
public boolean deleteProduct(int id) {
	EntityManager manager = factory.createEntityManager();
	EntityTransaction transaction = manager.getTransaction();
	Product product = manager.find(Product.class, id);
	if (product != null) {
		transaction.begin();
		manager.remove(product);
		transaction.commit();
		return true;
	} else {
		return false;
	}
}
